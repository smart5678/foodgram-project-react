name: foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install depencies
        run: |
          cd backend
          # pip update
          python -m pip install --upgrade pip
          # flake8 with plugin install
          pip install pytest pytest-django flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          # install depencies
          ls backend
          pip install -r requirements.txt

      - name: Test with flake8 and Django tests
        run: |
          cd backend
          # flake8 tests
          python -m flake8
          # Start pytest
          # pytest


  build_and_push_to_docker_hub:
    name: Push Docker image to Docker hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Set up Docker build
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: smart5678/foodgram:latest
          context: backend/


  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      if: github.ref == 'refs/heads/master'
      steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_SECRET }}
          passphrase: ${{ secrets.PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
          script: |
            sudo docker pull smart5678/foodgram
            sudo docker-compose stop
            sudo docker-compose rm web

            cd backend/
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            cd ../infra/
            sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
